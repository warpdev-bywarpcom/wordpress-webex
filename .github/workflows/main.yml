name: CI

on:
  # Triggers the workflow on push or pull request events but only for the main branch.
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This job runs the test suite set with install-wp-tests.sh and using phpunit
  wp-test:
    runs-on: ${{ matrix.operating-system }}
    
    strategy:
      # Max PHP version is PHP 7.3 (due to phpunit 7). phpunit 7 is the latest supported by WordPress. 
      # More details on the test strategy in https://github.com/warpdev-bywarpcom/wordpress-webex/discussions/9.
      matrix:
        operating-system: [ubuntu-latest]
        php-version: ['7.3']
        wordpress-version: ['latest']
        
    env:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: wordpress_test
      MYSQL_VERSION: 5.7
          
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
      
      # We start by calling MySQL because the container needs time to boot. 
      # Using the native service, instead of this docker approach, was giving conection errors.
      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql version: $MYSQL_VERSION
          mysql database: $MYSQL_DATABASE
          mysql root password: $MYSQL_ROOT_PASSWORD
      
      - name: Setup PHP & phpunit
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: phpunit:7.5.20
          coverage: xdebug
     
      # Intalls the tests - the parameters syntax can be found in the install-wp-tests.sh file. 
      # loalhost doesn't work, we need 127.0.0.1: https://stackoverflow.com/q/58222386/4470542
      - name: Install WP Tests
        run: bash bin/install-wp-tests.sh $MYSQL_DATABASE root $MYSQL_ROOT_PASSWORD 127.0.0.1 ${{ matrix.wordpress-version }} true

      # MySQL may not be ready. In that case we wait 1 second and try again. Same logic for not using the default host (localhost).
      - name: Wait for MySQL
        run: |
          while ! mysqladmin ping --host=127.0.0.1 --password=$MYSQL_ROOT_PASSWORD --silent; do
            sleep 1
          done

      - name: PHPUnit tests
        run: |
          phpunit 
          WP_MULTISITE=1 phpunit --coverage-xml coverage/

      - name: Coverage report to codacy
        uses: codacy/codacy-coverage-reporter-action@v0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}

          
  php-code-sniffer:
    runs-on: ubuntu-latest
        
    steps:
      # Checks-out the repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2
      
      - name: Setup PHP 
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0
      
      # Using phpcodesniffer-composer-installer allows for easy installation of PHP_CodeSniffer coding standards
      - name: Add phpcs and packages
        run: |
         export PATH="$HOME/.config/composer/vendor/bin:$PATH"
         composer global require wp-coding-standards/wpcs
         composer global require phpcompatibility/phpcompatibility-wp
         composer global require dealerdirect/phpcodesniffer-composer-installer

      - name: Run phpcs
        run: |
          phpcs --standard=WordPress .
          # Validate compatibility with older PHP versions
          phpcs --standard=PHPCompatibilityWP --extensions=php --runtime-set testVersion 5.6- .
